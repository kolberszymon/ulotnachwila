--
-- PostgreSQL database dump
--

-- Dumped from database version 12.1
-- Dumped by pg_dump version 12.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: miejsce; Type: TYPE; Schema: public; Owner: admin
--

CREATE TYPE public.miejsce AS (
	rzad integer,
	miejsce integer
);


ALTER TYPE public.miejsce OWNER TO admin;

--
-- Name: przygotujmiejsca(); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION public.przygotujmiejsca() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
counter INTEGER := 0;
BEGIN
LOOP
EXIT WHEN counter = NEW.ilosc_miejsc;
INSERT INTO miejsca(id_sztuki, numer_miejsca) VALUES(NEW.id, counter + 1);
counter := counter + 1;
END LOOP;
RETURN NULL;
END;
$$;


ALTER FUNCTION public.przygotujmiejsca() OWNER TO admin;

--
-- Name: zarezerwujbilet(); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION public.zarezerwujbilet() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
IF (SELECT wolne FROM miejsca WHERE id_sztuki = NEW.id_sztuki AND numer_miejsca = NEW.numer_miejsca) = true THEN
UPDATE miejsca
SET wolne = false
WHERE id_sztuki = NEW.id_sztuki AND numer_miejsca = NEW.numer_miejsca;
RETURN NEW;
ELSE
RETURN NULL;
END IF;
END;
$$;


ALTER FUNCTION public.zarezerwujbilet() OWNER TO admin;

--
-- Name: zwolnijmiejsce(); Type: FUNCTION; Schema: public; Owner: admin
--

CREATE FUNCTION public.zwolnijmiejsce() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
IF (SELECT wolne FROM miejsca WHERE id_sztuki= OLD.id_sztuki AND numer_miejsca = OLD.numer_miejsca) = false THEN
UPDATE miejsca
SET wolne = true
WHERE id_sztuki = OLD.id_sztuki AND numer_miejsca = OLD.numer_miejsca;
END IF;
RETURN NULL;
END;
$$;


ALTER FUNCTION public.zwolnijmiejsce() OWNER TO admin;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: bilety; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.bilety (
    id_biletu integer NOT NULL,
    numer_miejsca integer NOT NULL,
    imie text NOT NULL,
    nazwisko text NOT NULL,
    id_sztuki integer
);


ALTER TABLE public.bilety OWNER TO admin;

--
-- Name: bilety_id_biletu_seq; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.bilety_id_biletu_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.bilety_id_biletu_seq OWNER TO admin;

--
-- Name: bilety_id_biletu_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: admin
--

ALTER SEQUENCE public.bilety_id_biletu_seq OWNED BY public.bilety.id_biletu;


--
-- Name: miejsca; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.miejsca (
    numer_miejsca integer,
    wolne boolean DEFAULT true,
    id_sztuki integer
);


ALTER TABLE public.miejsca OWNER TO admin;

--
-- Name: prim; Type: SEQUENCE; Schema: public; Owner: admin
--

CREATE SEQUENCE public.prim
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.prim OWNER TO admin;

--
-- Name: sztuka; Type: TABLE; Schema: public; Owner: admin
--

CREATE TABLE public.sztuka (
    id integer NOT NULL,
    data_sztuki timestamp without time zone NOT NULL,
    nazwa text NOT NULL,
    ilosc_miejsc integer DEFAULT 5 NOT NULL
);


ALTER TABLE public.sztuka OWNER TO admin;

--
-- Name: bilety id_biletu; Type: DEFAULT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.bilety ALTER COLUMN id_biletu SET DEFAULT nextval('public.bilety_id_biletu_seq'::regclass);


--
-- Data for Name: bilety; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.bilety (id_biletu, numer_miejsca, imie, nazwisko, id_sztuki) FROM stdin;
\.


--
-- Data for Name: miejsca; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.miejsca (numer_miejsca, wolne, id_sztuki) FROM stdin;
1	t	6
2	t	6
3	t	6
4	t	6
5	t	6
6	t	6
7	t	6
8	t	6
9	t	6
10	t	6
11	t	6
12	t	6
13	t	6
14	t	6
15	t	6
1	t	8
2	t	8
3	t	8
5	t	8
6	t	8
7	t	8
8	t	8
1	t	9
2	t	9
3	t	9
4	t	9
5	t	9
6	t	9
7	t	9
8	t	9
9	t	9
10	t	9
11	t	9
4	t	8
\.


--
-- Data for Name: sztuka; Type: TABLE DATA; Schema: public; Owner: admin
--

COPY public.sztuka (id, data_sztuki, nazwa, ilosc_miejsc) FROM stdin;
6	2020-01-13 23:12:08.024197	Bajeczna Imprezka	15
8	2020-01-13 23:12:43.241192	Sienkiewicz. Historia Prawdziwa	8
9	2020-01-13 23:19:14.22376	Wixapol BY STACHU	11
\.


--
-- Name: bilety_id_biletu_seq; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.bilety_id_biletu_seq', 4, true);


--
-- Name: prim; Type: SEQUENCE SET; Schema: public; Owner: admin
--

SELECT pg_catalog.setval('public.prim', 9, true);


--
-- Name: bilety bilety_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.bilety
    ADD CONSTRAINT bilety_pkey PRIMARY KEY (id_biletu);


--
-- Name: sztuka sztuka_pkey; Type: CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.sztuka
    ADD CONSTRAINT sztuka_pkey PRIMARY KEY (id);


--
-- Name: bilety buyticket; Type: TRIGGER; Schema: public; Owner: admin
--

CREATE TRIGGER buyticket BEFORE INSERT ON public.bilety FOR EACH ROW EXECUTE FUNCTION public.zarezerwujbilet();


--
-- Name: sztuka populatesits; Type: TRIGGER; Schema: public; Owner: admin
--

CREATE TRIGGER populatesits AFTER INSERT ON public.sztuka FOR EACH ROW EXECUTE FUNCTION public.przygotujmiejsca();


--
-- Name: bilety zwolnijmiejsca; Type: TRIGGER; Schema: public; Owner: admin
--

CREATE TRIGGER zwolnijmiejsca AFTER DELETE ON public.bilety FOR EACH ROW EXECUTE FUNCTION public.zwolnijmiejsce();


--
-- Name: bilety bilety_id_sztuki_fkey; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.bilety
    ADD CONSTRAINT bilety_id_sztuki_fkey FOREIGN KEY (id_sztuki) REFERENCES public.sztuka(id) ON DELETE CASCADE;


--
-- Name: miejsca miejsca_id_sztuki_fkey; Type: FK CONSTRAINT; Schema: public; Owner: admin
--

ALTER TABLE ONLY public.miejsca
    ADD CONSTRAINT miejsca_id_sztuki_fkey FOREIGN KEY (id_sztuki) REFERENCES public.sztuka(id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

